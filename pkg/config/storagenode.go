// AUTOGENERATED BY pkg/config/gen
// DO NOT EDIT.

package config

func storagenodeConfig() []Option {
	return []Option{

		{
			Name:        "STORJ_IDENTITY_CERT_PATH",
			Description: "path to the certificate chain for this identity",
			Default:     "$IDENTITYDIR/identity.cert",
		},
		{
			Name:        "STORJ_IDENTITY_KEY_PATH",
			Description: "path to the private key for this identity",
			Default:     "$IDENTITYDIR/identity.key",
		},
		{
			Name:        "STORJ_SERVER_CONFIG_REVOCATION_DBURL",
			Description: "url for revocation database (e.g. bolt://some.db OR redis://127.0.0.1:6378?db=2&password=abc123)",
			Default:     "bolt://$CONFDIR/revocations.db",
		},
		{
			Name:        "STORJ_SERVER_CONFIG_PEER_CAWHITELIST_PATH",
			Description: "path to the CA cert whitelist (peer identities must be signed by one these to be verified). this will override the default peer whitelist",
			Default:     "",
		},
		{
			Name:        "STORJ_SERVER_CONFIG_USE_PEER_CAWHITELIST",
			Description: "if true, uses peer ca whitelist checking",
			Default:     "",
		},
		{
			Name:        "STORJ_SERVER_CONFIG_PEER_IDVERSIONS",
			Description: "identity version(s) the server will be allowed to talk to",
			Default:     "latest",
		},
		{
			Name:        "STORJ_SERVER_CONFIG_EXTENSIONS_REVOCATION",
			Description: "if true, client leaves may contain the most recent certificate revocation for the current certificate",
			Default:     "true",
		},
		{
			Name:        "STORJ_SERVER_CONFIG_EXTENSIONS_WHITELIST_SIGNED_LEAF",
			Description: "if true, client leaves must contain a valid \"signed certificate extension\" (NB: verified against certs in the peer ca whitelist; i.e. if true, a whitelist must be provided)",
			Default:     "false",
		},
		{
			Name:        "STORJ_SERVER_ADDRESS",
			Description: "public address to listen on",
			Default:     ":7777",
		},
		{
			Name:        "STORJ_SERVER_PRIVATE_ADDRESS",
			Description: "private address to listen on",
			Default:     "127.0.0.1:7778",
		},
		{
			Name:        "STORJ_SERVER_DISABLE_QUIC",
			Description: "disable QUIC listener on a server",
			Default:     "false",
		},
		{
			Name:        "STORJ_SERVER_DISABLE_TCP",
			Description: "disable TCP listener on a server",
			Default:     "",
		},
		{
			Name:        "STORJ_SERVER_DEBUG_LOG_TRAFFIC",
			Description: "",
			Default:     "false",
		},
		{
			Name:        "STORJ_SERVER_TCPFAST_OPEN",
			Description: "enable support for tcp fast open",
			Default:     "true",
		},
		{
			Name:        "STORJ_SERVER_TCPFAST_OPEN_QUEUE",
			Description: "the size of the tcp fast open queue",
			Default:     "256",
		},
		{
			Name:        "STORJ_SERVER_DEBOUNCING_ENABLED",
			Description: "whether to debounce incoming messages",
			Default:     "true",
		},
		{
			Name:        "STORJ_DEBUG_ADDR",
			Description: "address to listen on for debug endpoints",
			Default:     "127.0.0.1:0",
		},
		{
			Name:        "STORJ_DEBUG_CONTROL_TITLE",
			Description: "",
			Default:     "",
		},
		{
			Name:        "STORJ_DEBUG_CONTROL",
			Description: "",
			Default:     "",
		},
		{
			Name:        "STORJ_DEBUG_CRAWLSPACE",
			Description: "if true, enable crawlspace on debug port",
			Default:     "false",
		},
		{
			Name:        "STORJ_PREFLIGHT_LOCAL_TIME_CHECK",
			Description: "whether or not preflight check for local system clock is enabled on the satellite side. When disabling this feature, your storagenode may not setup correctly.",
			Default:     "true",
		},
		{
			Name:        "STORJ_PREFLIGHT_DATABASE_CHECK",
			Description: "whether or not preflight check for database is enabled.",
			Default:     "true",
		},
		{
			Name:        "STORJ_CONTACT_EXTERNAL_ADDRESS",
			Description: "the public address of the node, useful for nodes behind NAT",
			Default:     "",
		},
		{
			Name:        "STORJ_CONTACT_INTERVAL",
			Description: "how frequently the node contact chore should run",
			Default:     "",
		},
		{
			Name:        "STORJ_CONTACT_CHECK_IN_TIMEOUT",
			Description: "timeout for the check-in request",
			Default:     "",
		},
		{
			Name:        "STORJ_CONTACT_TAGS_TAGS",
			Description: "",
			Default:     "",
		},
		{
			Name:        "STORJ_CONTACT_TAGS_XXX_UNRECOGNIZED",
			Description: "",
			Default:     "",
		},
		{
			Name:        "STORJ_CONTACT_TAGS_XXX_SIZECACHE",
			Description: "",
			Default:     "",
		},
		{
			Name:        "STORJ_CONTACT_SELF_SIGNED_TAGS",
			Description: "coma separated key=value pairs, which will be self signed and used as tags",
			Default:     "",
		},
		{
			Name:        "STORJ_OPERATOR_EMAIL",
			Description: "operator email address",
			Default:     "",
		},
		{
			Name:        "STORJ_OPERATOR_WALLET",
			Description: "operator wallet address",
			Default:     "",
		},
		{
			Name:        "STORJ_OPERATOR_WALLET_FEATURES",
			Description: "operator wallet features",
			Default:     "",
		},
		{
			Name:        "STORJ_HASHSTORE_LOGS_PATH",
			Description: "path to store log files in (by default, it's relative to the storage directory)'",
			Default:     "hashstore",
		},
		{
			Name:        "STORJ_HASHSTORE_TABLE_PATH",
			Description: "path to store tables in. Can be same as LogsPath, as subdirectories are used (by default, it's relative to the storage directory)",
			Default:     "hashstore",
		},
		{
			Name:        "STORJ_STORAGE_PATH",
			Description: "path to store data in",
			Default:     "$CONFDIR/storage",
		},
		{
			Name:        "STORJ_STORAGE_ALLOCATED_DISK_SPACE",
			Description: "total allocated disk space in bytes",
			Default:     "1TB",
		},
		{
			Name:        "STORJ_STORAGE_WHITELISTED_SATELLITES",
			Description: "a comma-separated list of approved satellite node urls (unused)",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE_ALLOCATED_BANDWIDTH",
			Description: "total allocated bandwidth in bytes (deprecated)",
			Default:     "0B",
		},
		{
			Name:        "STORJ_STORAGE_KBUCKET_REFRESH_INTERVAL",
			Description: "how frequently Kademlia bucket should be refreshed with node stats (deprecated)",
			Default:     "1h0m0s",
		},
		{
			Name:        "STORJ_STORAGE2_DATABASE_DIR",
			Description: "directory to store databases. if empty, uses data path",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_EXPIRATION_GRACE_PERIOD",
			Description: "how soon before expiration date should things be considered expired",
			Default:     "48h0m0s",
		},
		{
			Name:        "STORJ_STORAGE2_MAX_CONCURRENT_REQUESTS",
			Description: "how many concurrent requests are allowed, before uploads are rejected. 0 represents unlimited.",
			Default:     "0",
		},
		{
			Name:        "STORJ_STORAGE2_ORDER_LIMIT_GRACE_PERIOD",
			Description: "how long after OrderLimit creation date are OrderLimits no longer accepted",
			Default:     "1h0m0s",
		},
		{
			Name:        "STORJ_STORAGE2_CACHE_SYNC_INTERVAL",
			Description: "how often the space used cache is synced to persistent storage",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_PIECE_SCAN_ON_STARTUP",
			Description: "if set to true, all pieces disk usage is recalculated on startup",
			Default:     "true",
		},
		{
			Name:        "STORJ_STORAGE2_STREAM_OPERATION_TIMEOUT",
			Description: "how long to spend waiting for a stream operation before canceling",
			Default:     "30m",
		},
		{
			Name:        "STORJ_STORAGE2_REPORT_CAPACITY_THRESHOLD",
			Description: "threshold below which to immediately notify satellite of capacity",
			Default:     "5GB",
		},
		{
			Name:        "STORJ_STORAGE2_MAX_USED_SERIALS_SIZE",
			Description: "amount of memory allowed for used serials store - once surpassed, serials will be dropped at random",
			Default:     "1MB",
		},
		{
			Name:        "STORJ_STORAGE2_MIN_UPLOAD_SPEED",
			Description: "a client upload speed should not be lower than MinUploadSpeed in bytes-per-second (E.g: 1Mb), otherwise, it will be flagged as slow-connection and potentially be closed",
			Default:     "0Mb",
		},
		{
			Name:        "STORJ_STORAGE2_MIN_UPLOAD_SPEED_GRACE_DURATION",
			Description: "if MinUploadSpeed is configured, after a period of time after the client initiated the upload, the server will flag unusually slow upload client",
			Default:     "0h0m10s",
		},
		{
			Name:        "STORJ_STORAGE2_MIN_UPLOAD_SPEED_CONGESTION_THRESHOLD",
			Description: "if the portion defined by the total number of alive connection per MaxConcurrentRequest reaches this threshold, a slow upload client will no longer be monitored and flagged",
			Default:     "0.8",
		},
		{
			Name:        "STORJ_STORAGE2_TRUST_SOURCES",
			Description: "list of trust sources",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_TRUST_EXCLUSIONS_RULES",
			Description: "",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_TRUST_REFRESH_INTERVAL",
			Description: "how often the trust pool should be refreshed",
			Default:     "6h",
		},
		{
			Name:        "STORJ_STORAGE2_TRUST_CACHE_PATH",
			Description: "file path where trust lists should be cached",
			Default:     "${CONFDIR}/trust-cache.json",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_INTERVAL",
			Description: "how frequently to report storage stats to the satellite",
			Default:     "1h0m0s",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_VERIFY_DIR_READABLE_INTERVAL",
			Description: "how frequently to verify the location and readability of the storage directory",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_VERIFY_DIR_WRITABLE_INTERVAL",
			Description: "how frequently to verify writability of storage directory",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_VERIFY_DIR_READABLE_TIMEOUT",
			Description: "how long to wait for a storage directory readability verification to complete",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_VERIFY_DIR_WRITABLE_TIMEOUT",
			Description: "how long to wait for a storage directory writability verification to complete",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_VERIFY_DIR_WARN_ONLY",
			Description: "if the storage directory verification check fails, log a warning instead of killing the node",
			Default:     "false",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_MINIMUM_DISK_SPACE",
			Description: "how much disk space a node at minimum has to advertise",
			Default:     "500GB",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_MINIMUM_BANDWIDTH",
			Description: "how much bandwidth a node at minimum has to advertise (deprecated)",
			Default:     "0TB",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_NOTIFY_LOW_DISK_COOLDOWN",
			Description: "minimum length of time between capacity reports",
			Default:     "10m",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_DEDICATED_DISK",
			Description: "(EXPERIMENTAL) option to dedicate full disk to the storagenode. Allocated space won't be used, some UI / monitoring features will break.",
			Default:     "false",
		},
		{
			Name:        "STORJ_STORAGE2_MONITOR_RESERVED_BYTES",
			Description: "(EXPERIMENTAL) Number bytes to reserve on the disk in case of dedicated disk",
			Default:     "300GB",
		},
		{
			Name:        "STORJ_STORAGE2_ORDERS_MAX_SLEEP",
			Description: "maximum duration to wait before trying to send orders",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_ORDERS_SENDER_INTERVAL",
			Description: "duration between sending",
			Default:     "",
		},
		{
			Name:        "STORJ_STORAGE2_ORDERS_SENDER_TIMEOUT",
			Description: "timeout for sending",
			Default:     "1h0m0s",
		},
		{
			Name:        "STORJ_STORAGE2_ORDERS_SENDER_DIAL_TIMEOUT",
			Description: "timeout for dialing satellite during sending orders",
			Default:     "1m0s",
		},
		{
			Name:        "STORJ_STORAGE2_ORDERS_CLEANUP_INTERVAL",
			Description: "duration between archive cleanups",
			Default:     "5m0s",
		},
		{
			Name:        "STORJ_STORAGE2_ORDERS_ARCHIVE_TTL",
			Description: "length of time to archive orders before deletion",
			Default:     "168h0m0s",
		},
		{
			Name:        "STORJ_STORAGE2_ORDERS_PATH",
			Description: "path to store order limit files in",
			Default:     "$CONFDIR/orders",
		},
		{
			Name:        "STORJ_STORAGE2_DELETE_WORKERS",
			Description: "how many piece delete workers (unused)",
			Default:     "1",
		},
		{
			Name:        "STORJ_STORAGE2_DELETE_QUEUE_SIZE",
			Description: "size of the piece delete queue (unused)",
			Default:     "10000",
		},
		{
			Name:        "STORJ_STORAGE2_EXISTS_CHECK_WORKERS",
			Description: "how many workers to use to check if satellite pieces exists (unused)",
			Default:     "5",
		},
		{
			Name:        "STORJ_STORAGE2_RETAIN_TIME_BUFFER",
			Description: "allows for small differences in the satellite and storagenode clocks",
			Default:     "48h0m0s",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_BUFFER_SIZE",
			Description: "how many pieces to buffer",
			Default:     "1",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_DELAY",
			Description: "constant delay between migration of two pieces. 0 means no delay",
			Default:     "0",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_JITTER",
			Description: "whether to add jitter to the delay; has no effect if delay is 0",
			Default:     "true",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_INTERVAL",
			Description: "how long to wait between pooling satellites for active migration",
			Default:     "10m",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_MIGRATE_REGARDLESS",
			Description: "whether to also migrate pieces for satellites outside currently set",
			Default:     "false",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_MIGRATE_EXPIRED",
			Description: "whether to also migrate expired pieces",
			Default:     "true",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_DELETE_EXPIRED",
			Description: "whether to also delete expired pieces; has no effect if expired are migrated",
			Default:     "true",
		},
		{
			Name:        "STORJ_STORAGE2MIGRATION_SUPPRESS_CENTRAL_MIGRATION",
			Description: "if true, whether to suppress central control of migration initiation",
			Default:     "false",
		},
		{
			Name:        "STORJ_COLLECTOR_INTERVAL",
			Description: "how frequently expired pieces are collected",
			Default:     "1h0m0s",
		},
		{
			Name:        "STORJ_COLLECTOR_EXPIRATION_GRACE_PERIOD",
			Description: "how long should the collector wait before deleting expired pieces. Should not be less than 30 min since nodes are allowed to be 30 mins out of sync with the satellite.",
			Default:     "1h0m0s",
		},
		{
			Name:        "STORJ_COLLECTOR_EXPIRATION_BATCH_SIZE",
			Description: "how many expired pieces to delete in one batch. If <= 0, all expired pieces will be deleted in one batch. (ignored by flat file store)",
			Default:     "1000",
		},
		{
			Name:        "STORJ_COLLECTOR_FLAT_FILE_BATCH_LIMIT",
			Description: "how many per hour flat files can be deleted in one batch.",
			Default:     "5",
		},
		{
			Name:        "STORJ_COLLECTOR_REVERSE_ORDER",
			Description: "delete expired pieces in reverse order (recently expired first)",
			Default:     "false",
		},
		{
			Name:        "STORJ_FILESTORE_WRITE_BUFFER_SIZE",
			Description: "in-memory buffer for uploads",
			Default:     "128KiB",
		},
		{
			Name:        "STORJ_FILESTORE_FORCE_SYNC",
			Description: "if true, force disk synchronization and atomic writes",
			Default:     "false",
		},
		{
			Name:        "STORJ_PIECES_FILE_STAT_CACHE",
			Description: "optional type of file stat cache. Might be useful for slow disk and limited memory. Available options: badger (EXPERIMENTAL)",
			Default:     "",
		},
		{
			Name:        "STORJ_PIECES_WRITE_PREALLOC_SIZE",
			Description: "deprecated",
			Default:     "4MiB",
		},
		{
			Name:        "STORJ_PIECES_DELETE_TO_TRASH",
			Description: "move pieces to trash upon deletion. Warning: if set to false, you risk disqualification for failed audits if a satellite database is restored from backup.",
			Default:     "true",
		},
		{
			Name:        "STORJ_PIECES_ENABLE_LAZY_FILEWALKER",
			Description: "run garbage collection and used-space calculation filewalkers as a separate subprocess with lower IO priority",
			Default:     "true",
		},
		{
			Name:        "STORJ_PIECES_ENABLE_FLAT_EXPIRATION_STORE",
			Description: "use flat files for the piece expiration store instead of a sqlite database",
			Default:     "true",
		},
		{
			Name:        "STORJ_PIECES_FLAT_EXPIRATION_STORE_FILE_HANDLES",
			Description: "number of concurrent file handles to use for the flat expiration store",
			Default:     "1000",
		},
		{
			Name:        "STORJ_PIECES_FLAT_EXPIRATION_STORE_PATH",
			Description: "where to store flat piece expiration files, relative to the data directory",
			Default:     "piece_expirations",
		},
		{
			Name:        "STORJ_PIECES_FLAT_EXPIRATION_STORE_MAX_BUFFER_TIME",
			Description: "maximum time to buffer writes to the flat expiration store before flushing",
			Default:     "5m",
		},
		{
			Name:        "STORJ_PIECES_FLAT_EXPIRATION_INCLUDE_SQLITE",
			Description: "use and remove piece expirations from the sqlite database _also_ when the flat expiration store is enabled",
			Default:     "true",
		},
		{
			Name:        "STORJ_PIECES_TRASH_CHORE_INTERVAL",
			Description: "how often to empty check the trash, and delete old files",
			Default:     "24h",
		},
		{
			Name:        "STORJ_RETAIN_MAX_TIME_SKEW",
			Description: "allows for small differences in the satellite and storagenode clocks",
			Default:     "72h0m0s",
		},
		{
			Name:        "STORJ_RETAIN_STATUS",
			Description: "allows configuration to enable, disable, or test retain requests from the satellite. Options: (disabled/enabled/debug)",
			Default:     "enabled",
		},
		{
			Name:        "STORJ_RETAIN_CONCURRENCY",
			Description: "how many concurrent retain requests can be processed at the same time.",
			Default:     "1",
		},
		{
			Name:        "STORJ_RETAIN_CACHE_PATH",
			Description: "path to the cache directory for retain requests.",
			Default:     "$CONFDIR/retain",
		},
		{
			Name:        "STORJ_NODESTATS_MAX_SLEEP",
			Description: "maximum duration to wait before requesting data",
			Default:     "",
		},
		{
			Name:        "STORJ_NODESTATS_REPUTATION_SYNC",
			Description: "how often to sync reputation",
			Default:     "",
		},
		{
			Name:        "STORJ_NODESTATS_STORAGE_SYNC",
			Description: "how often to sync storage",
			Default:     "",
		},
		{
			Name:        "STORJ_REPUTATION_MAX_SLEEP",
			Description: "maximum duration to wait before requesting data",
			Default:     "",
		},
		{
			Name:        "STORJ_REPUTATION_INTERVAL",
			Description: "how often to sync reputation",
			Default:     "",
		},
		{
			Name:        "STORJ_REPUTATION_CACHE",
			Description: "store reputation stats in cache",
			Default:     "",
		},
		{
			Name:        "STORJ_CONSOLE_ADDRESS",
			Description: "server address of the api gateway and frontend app",
			Default:     "127.0.0.1:14002",
		},
		{
			Name:        "STORJ_CONSOLE_STATIC_DIR",
			Description: "path to static resources",
			Default:     "",
		},
		{
			Name:        "STORJ_HEALTHCHECK_DETAILS",
			Description: "Enable additional details about the satellite connections via the HTTP healthcheck.",
			Default:     "false",
		},
		{
			Name:        "STORJ_HEALTHCHECK_ENABLED",
			Description: "Provide health endpoint (including suspension/audit failures) on main public port, but HTTP protocol.",
			Default:     "true",
		},
		{
			Name:        "STORJ_VERSION_CONFIG_CLIENT_CONFIG_SERVER_ADDRESS",
			Description: "server address to check its version against",
			Default:     "https://version.storj.io",
		},
		{
			Name:        "STORJ_VERSION_CONFIG_CLIENT_CONFIG_REQUEST_TIMEOUT",
			Description: "Request timeout for version checks",
			Default:     "0h1m0s",
		},
		{
			Name:        "STORJ_VERSION_CONFIG_CHECK_INTERVAL",
			Description: "Interval to check the version",
			Default:     "0h15m0s",
		},
		{
			Name:        "STORJ_VERSION_RUN_MODE",
			Description: "Define the run mode for the version checker. Options (once,periodic,disable)",
			Default:     "periodic",
		},
		{
			Name:        "STORJ_BANDWIDTH_INTERVAL",
			Description: "how frequently bandwidth usage cache should be synced with the db",
			Default:     "1h0m0s",
		},
		{
			Name:        "STORJ_GRACEFUL_EXIT_CHORE_INTERVAL",
			Description: "how often to run the chore to check for satellites for the node to exit.",
			Default:     "",
		},
		{
			Name:        "STORJ_GRACEFUL_EXIT_NUM_WORKERS",
			Description: "number of workers to handle satellite exits",
			Default:     "4",
		},
		{
			Name:        "STORJ_GRACEFUL_EXIT_NUM_CONCURRENT_TRANSFERS",
			Description: "number of concurrent transfers per graceful exit worker",
			Default:     "5",
		},
		{
			Name:        "STORJ_GRACEFUL_EXIT_MIN_BYTES_PER_SECOND",
			Description: "the minimum acceptable bytes that an exiting node can transfer per second to the new node",
			Default:     "5KB",
		},
		{
			Name:        "STORJ_GRACEFUL_EXIT_MIN_DOWNLOAD_TIMEOUT",
			Description: "the minimum duration for downloading a piece from storage nodes before timing out",
			Default:     "2m",
		},
		{
			Name:        "STORJ_FORGET_SATELLITE_CHORE_INTERVAL",
			Description: "how often to run the chore to check for satellites for the node to forget",
			Default:     "",
		},
		{
			Name:        "STORJ_FORGET_SATELLITE_NUM_WORKERS",
			Description: "number of workers to handle forget satellite",
			Default:     "1",
		},
	}
}
